// Map of keywords to subjects
const subjectKeywords: Record<string, string[]> = {
    math: [
      "addition",
      "subtraction",
      "multiplication",
      "division",
      "fractions",
      "decimals",
      "algebra",
      "geometry",
      "calculus",
      "equations",
      "numbers",
      "counting",
      "arithmetic",
      "mathematics",
      "trigonometry",
      "statistics",
      "probability",
      "math",
    ],
    science: [
      "biology",
      "chemistry",
      "physics",
      "astronomy",
      "earth",
      "plants",
      "animals",
      "cells",
      "molecules",
      "atoms",
      "energy",
      "force",
      "motion",
      "gravity",
      "magnetism",
      "electricity",
      "light",
      "sound",
      "heat",
      "temperature",
      "weather",
      "climate",
      "environment",
      "ecosystem",
      "photosynthesis",
      "respiration",
      "digestion",
      "evolution",
      "genetics",
      "dna",
      "science",
      "scientific",
      "experiment",
      "laboratory",
      "hypothesis",
    ],
    reading: [
      "alphabet",
      "letters",
      "words",
      "sentences",
      "grammar",
      "vocabulary",
      "spelling",
      "phonics",
      "reading",
      "writing",
      "literature",
      "poetry",
      "fiction",
      "nonfiction",
      "books",
      "stories",
      "authors",
      "characters",
      "plot",
      "setting",
      "theme",
      "language",
    ],
    coding: [
      "programming",
      "code",
      "algorithm",
      "variable",
      "function",
      "loop",
      "conditional",
      "javascript",
      "python",
      "java",
      "html",
      "css",
      "web",
      "app",
      "software",
      "computer",
      "coding",
      "developer",
      "programming",
      "c++",
      "c#",
      "ruby",
      "swift",
      "scratch",
    ],
    art: [
      "drawing",
      "painting",
      "sculpture",
      "colors",
      "design",
      "artist",
      "creativity",
      "sketch",
      "craft",
      "art",
      "artistic",
      "visual",
      "aesthetics",
      "composition",
    ],
    music: [
      "notes",
      "rhythm",
      "melody",
      "harmony",
      "instruments",
      "singing",
      "songs",
      "composer",
      "musical",
      "music",
      "tempo",
      "pitch",
      "scale",
      "chord",
    ],
    geography: [
      "maps",
      "countries",
      "continents",
      "oceans",
      "mountains",
      "rivers",
      "cities",
      "states",
      "capitals",
      "geography",
      "world",
      "globe",
      "earth",
      "terrain",
      "landforms",
      "climate",
      "population",
      "culture",
      "landmarks",
      "regions",
      "directions",
      "compass",
    ],
    logic: [
      "puzzles",
      "problems",
      "reasoning",
      "thinking",
      "logic",
      "logical",
      "critical",
      "analysis",
      "deduction",
      "induction",
      "patterns",
      "sequences",
      "riddles",
    ],
    history: [
      "past",
      "ancient",
      "medieval",
      "modern",
      "civilization",
      "empire",
      "war",
      "revolution",
      "historical",
      "history",
      "timeline",
      "events",
      "people",
      "leaders",
      "kings",
      "queens",
      "presidents",
      "government",
      "politics",
      "society",
      "culture",
      "archaeology",
    ],
  }
  
  /**
   * Categorizes a topic into a subject based on keyword matching
   * @param topic The topic to categorize
   * @returns The subject category (defaults to "general" if no match)
   */
  export function categorizeTopic(topic: string): string {
    // Convert to lowercase for case-insensitive matching
    const lowercaseTopic = topic.toLowerCase()
  
    // Check each subject's keywords
    for (const [subject, keywords] of Object.entries(subjectKeywords)) {
      // If any keyword is found in the topic, return that subject
      if (keywords.some((keyword) => lowercaseTopic.includes(keyword))) {
        return subject
      }
    }
  
    // Default to "general" if no match is found
    return "general"
  }